# This is a basic workflow to help you get started with Actions

name: Build and push the latest build to staging

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_push_image:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker Login
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
      uses: docker/login-action@v2.0.0
      with:
        # Server address of Docker registry. If not set then will default to Docker Hub
        registry: ${{ secrets.ACR_NAME }}
        # Username used to log against the Docker registry
        username: ${{ secrets.ACR_LOGIN }}
        # Password or personal access token used to log against the Docker registry
        password: ${{ secrets.ACR_PASSWORD }}
        # Specifies whether the given registry is ECR (auto, true or false)
        ecr: # optional, default is auto
        # Log out from the Docker registry at the end of a job
        logout: # optional, default is true
      
      - name: Build and push staging image
      # You may pin to the exact commit or the version.
      # uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8
      uses: docker/build-push-action@v3.0.0
      with:
        storage: contoso-website
        # List of a customs host-to-IP mapping (e.g., docker:10.180.0.1)
        add-hosts: # optional
        # List of extra privileged entitlement (e.g., network.host,security.insecure)
        allow: # optional
        # List of build-time variables
        build-args: # optional
        # List of additional build contexts (e.g., name=path)
        build-contexts: # optional
        # Builder instance
        builder: # optional
        # List of external cache sources for buildx (e.g., user/app:cache, type=local,src=path/to/dir)
        cache-from: # optional
        # List of cache export destinations for buildx (e.g., user/app:cache, type=local,dest=path/to/dir)
        cache-to: # optional
        # Optional parent cgroup for the container used in the build
        cgroup-parent: # optional
        # Build's context is the set of files located in the specified PATH or URL
        context: .
        # Path to the Dockerfile
        file: # optional
        # List of metadata for an image
        labels: # optional
        # Load is a shorthand for --output=type=docker
        load: # optional, default is false
        # Set the networking mode for the RUN instructions during build
        network: # optional
        # Do not use cache when building the image
        no-cache: # optional, default is false
        # List of output destinations (format: type=local,dest=path)
        outputs: # optional
        # List of target platforms for build
        platforms: # optional
        # Always attempt to pull all referenced images
        pull: # optional, default is false
        # Push is a shorthand for --output=type=registry
        push: true
        # List of secrets to expose to the build (e.g., key=string, GIT_AUTH_TOKEN=mytoken)
        secrets: # optional
        # List of secret files to expose to the build (e.g., key=filename, MY_SECRET=./secret.txt)
        secret-files: # optional
        # Size of /dev/shm (e.g., 2g)
        shm-size: # optional
        # List of SSH agent socket or keys to expose to the build
        ssh: # optional
        # List of tags
        tags: latest
        # Sets the target stage to build
        target: # optional
        # Ulimit options (e.g., nofile=1024:1024)
        ulimit: # optional
        # GitHub Token used to authenticate against a repository for Git context
        github-token: # optional, default is ${{ github.token }}
      
      # Runs a single command using the runners shell
      - name: Build and push the latest build to staging
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Build and push the latest build to staging
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
